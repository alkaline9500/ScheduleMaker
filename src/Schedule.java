/**
 * Schedule Class
 * Represents one possible schedule
 * @author Nic Manoogian
 */

import java.util.ArrayList;

public class Schedule
{
    // List of shifts which need to be covered
    private ArrayList<Shift> shifts;
    // List of employees
    private ArrayList<Employee> employees;

    /**
     * Determines if this configuration is the goal
     * @return if there are no shifts to be covered
     */
    public boolean isGoal()
    {
        return shifts.size() == 0;
    }

    /**
     * Returns a list of the new configurations generated by
     * giving the next available shift the the next available employee
     * @return a list of the new configurations
     */
    public ArrayList<Schedule> getNeighbors()
    {
        ArrayList<Schedule> neighborList = new ArrayList<Schedule>();
        
        for (Employee e : employees)
        {
            if (e.canWork(shifts.get(0))
            {
                e.take(shifts.get(0));
                shifts.remove(0);
            }
        }

        return neighborList;
}
